import java.awt.*;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;





import java.awt.*;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;


public class FractalSquaresPanel extends JPanel implements ChangeListener {
	
	public static void main(String[] args) {
		JFrame window = new JFrame("Fractal Squares");
		window.setContentPane(new FractalSquaresPanel());
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setLocation(100, 75);
		window.setSize(600, 600);
		window.setVisible(true);
	}
	

	JSlider slider;
	
	public FractalSquaresPanel() {
		slider = new JSlider(1,4,1);
		slider.setSnapToTicks(true);
		slider.setMajorTickSpacing(1);
		slider.setPaintTicks(true);
	    slider.addChangeListener(this);
		this.setLayout(new BorderLayout());
		this.add(slider, BorderLayout.SOUTH);
		
		
		

	}
	
	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		int numSquareLevels = slider.getValue();
		g.drawString("" + numSquareLevels, 10, 20);
		Point upperLeft=new Point(200,200);
		int width= 200 ;
		drawFractalSquares(g,upperLeft,width, numSquareLevels);
		
	}

	public void drawFractalSquares(Graphics g, Point upperLeft, int width, int numSquareLevels){
	if(numSquareLevels <= 1){
		g.setColor(Color.pink);
		g.fillRect(upperLeft.x, upperLeft.y, width, width);
		g.setColor(Color.cyan);
		g.drawRect(upperLeft.x, upperLeft.y, width, width);
	} if(numSquareLevels <=2){
			  g.setColor(Color.blue);
				g.fillRect(upperLeft.x-50, upperLeft.y, (int) (width/2.2),(int) (width/2.2));
				g.setColor(Color.cyan);
				g.drawRect(upperLeft.x-50, upperLeft.y,(int) (width/2.2),(int) (width/2.2));
		  }
	}
	
		
		
	
	
	
	
	@Override
	public void stateChanged(ChangeEvent e) {
		repaint();
		
	}
	

	
}

package classcode;


import java.util.Scanner;

public class scannerPractice {

	public static void main(String[] args) {
		String token;
		int counter;
		Scanner inputScanner=new Scanner(System.in);
		
		String line= inputScanner.nextLine();
		System.out.println(line.length());
		while(inputScanner.hasNext()){

token= inputScanner.next();
System.out.println(token.length());

		}

	}


}
3/19/14, 5:26 PM
You sent
package classcode;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.Scanner;

public class CartOfInts {

	public static void main(String[] args) {
		try{
		System.out.print("How many rows?:    ");
		Scanner inputScanner=new Scanner(System.in);
		String row= inputScanner.nextLine();
		System.out.print("How many colums?:    ");
		Scanner inputScanner1=new Scanner(System.in);
		String colums= inputScanner.nextLine();
		for(int i=1;i<= Integer.parseInt(colums);i++){
			     for(int j=1;j<=Integer.parseInt(row);j++){
			    	 System.out.println(Math.pow(j, i));
		}
	
		}
		PrintStream out = System.out;
		
			File file= new File("output.txt");
			out = new PrintStream(new FileOutputStream("output.txt"));
			System.setOut(out);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

}

package classcode;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.Scanner;

public class CartOfInts {

	public static void main(String[] args) {
		try{
		System.out.print("How many rows?:    ");
		Scanner inputScanner=new Scanner(System.in);
		String row= inputScanner.nextLine();
		System.out.print("How many colums?:    ");
		Scanner inputScanner1=new Scanner(System.in);
		String colums= inputScanner.nextLine();
		for(int i=1;i<= Integer.parseInt(colums);i++){
			     for(int j=1;j<=Integer.parseInt(row);j++){
			    	 System.out.println(Math.pow(j, i));
		}
	
		}
		PrintStream out = System.out;
		
			File file= new File("output.txt");
			out = new PrintStream(new FileOutputStream("output.txt"));
			System.setOut(out);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

}
package classcode;

import java.awt.FileDialog;
import java.io.File;
import java.util.Scanner;

import javax.swing.JFileChooser;

public class DirectoryLister {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.print("Choose a directory:  ");
	JFileChooser filedialog= new JFileChooser();
	
	
	filedialog.setDialogTitle("Choose a directory");
	filedialog.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	int option= filedialog.showOpenDialog(null);
	   if(option!=JFileChooser.APPROVE_OPTION){
		   return;
	   }
	   File userFile1= filedialog.getSelectedFile();
		if(! userFile1.exists()){
			System.out.print("That file does not exist");
			return;
		}
		if(! userFile1.isDirectory()){
			System.out.println("That isn't a directory");
			return;
		}
		   System.out.print("The directory "+ userFile1 + "contains");
		   String[] contents = userFile1.list();
		   for(int i=0;i<contents.length;i++){
			   System.out.println(contents[i]);
		   }

	}

}
3/26/14, 2:46 PM
You sent
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class MessageOftheDayServer {

	public static int LISTENING_PORT= 11111;
	
	public static void main(String[] args){
		ServerSocket listener;
		Socket connection;   
		try{
			listener= new ServerSocket(LISTENING_PORT);
			while(true){
				connection= listener.accept();  //blocking method
				sendMessage(connection);
			}
		}
		catch(Exception e){
			e.printStackTrace();
		}
	}

	private static void sendMessage(Socket connection) {
		try{
			PrintWriter output= new PrintWriter(connection.getOutputStream());
			output.println("Look behind you >:)");
			output.close();
			connection.close();
		}
		catch (Exception e){
			e.printStackTrace();
		}
		
	}
	
	
}

import java.net.Socket;
import java.util.Scanner;

public class MessageOftheDayClient {
	
	public static int LISTENING_PORT=11111;

	
	public static void main(String[] args){
		String hostname;
		Socket connection;
		Scanner scanner;
		
		if(args.length==0){
			System.out.print("Usage: Java MessageOfTheDayClient <hostname>");
			return;
		}
		hostname=args[0];
		try{
			connection =new Socket(hostname, LISTENING_PORT);
			scanner= new Scanner(connection.getInputStream());
			while(scanner.hasNextLine()){
				System.out.println(scanner.nextLine());
			}
			scanner.close();
			connection.close();
		}
		catch(Exception e){
			e.printStackTrace();
		}
	}
}
